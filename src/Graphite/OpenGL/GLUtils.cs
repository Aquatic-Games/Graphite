using Silk.NET.OpenGL;

namespace Graphite.OpenGL;

internal static class GLUtils
{
    public static (PixelFormat format, SizedInternalFormat iFormat, PixelType type) ToGL(this Format format)
    {
        return format switch
        {
            Format.Unknown => (0, 0, 0),
            Format.B5G6R5_UNorm => (PixelFormat.Bgr, SizedInternalFormat.Rgb5, PixelType.UnsignedByte),
            Format.B5G5R5A1_UNorm => (PixelFormat.Bgra, SizedInternalFormat.Rgb5A1, PixelType.UnsignedByte),
            Format.A8_UNorm => (PixelFormat.Alpha, SizedInternalFormat.R8, PixelType.UnsignedByte),
            Format.R8_UNorm => (PixelFormat.Red, SizedInternalFormat.R8, PixelType.UnsignedByte),
            Format.R8_UInt => (PixelFormat.RedInteger, SizedInternalFormat.R8ui, PixelType.UnsignedInt),
            Format.R8_SNorm => (PixelFormat.Red, SizedInternalFormat.R8SNorm, PixelType.Byte),
            Format.R8_SInt => (PixelFormat.RedInteger, SizedInternalFormat.R8i, PixelType.Int),
            Format.R8G8_UNorm => (PixelFormat.RG, SizedInternalFormat.RG8, PixelType.UnsignedByte),
            Format.R8G8_UInt => (PixelFormat.RGInteger, SizedInternalFormat.RG8ui, PixelType.UnsignedInt),
            Format.R8G8_SNorm => (PixelFormat.RG, SizedInternalFormat.RG8SNorm, PixelType.Byte),
            Format.R8G8_SInt => (PixelFormat.RGInteger, SizedInternalFormat.RG8i, PixelType.Int),
            Format.R8G8B8A8_UNorm => (PixelFormat.Rgba, SizedInternalFormat.Rgba8, PixelType.UnsignedByte),
            Format.R8G8B8A8_UNorm_SRGB => (PixelFormat.Rgba, SizedInternalFormat.Srgb8Alpha8, PixelType.UnsignedByte),
            Format.R8G8B8A8_UInt => (PixelFormat.RgbaInteger, SizedInternalFormat.Rgba8ui, PixelType.UnsignedInt),
            Format.R8G8B8A8_SNorm => (PixelFormat.Rgba, SizedInternalFormat.Rgba8SNorm, PixelType.Byte),
            Format.R8G8B8A8_SInt => (PixelFormat.RgbaInteger, SizedInternalFormat.Rgba8i, PixelType.Int),
            Format.B8G8R8A8_UNorm => (PixelFormat.Bgra, SizedInternalFormat.Rgba8, PixelType.UnsignedByte),
            Format.B8G8R8A8_UNorm_SRGB => (PixelFormat.Bgra, SizedInternalFormat.Srgb8Alpha8, PixelType.UnsignedByte),
            Format.R10G10B10A2_UNorm => (PixelFormat.Rgba, SizedInternalFormat.Rgb10A2, PixelType.UnsignedByte),
            Format.R10G10B10A2_UInt => (PixelFormat.RgbaInteger, SizedInternalFormat.Rgb10A2ui, PixelType.UnsignedInt),
            Format.R16_Float => (PixelFormat.Red, SizedInternalFormat.R16f, PixelType.Float),
            Format.R16_UNorm => (PixelFormat.Red, SizedInternalFormat.R16, PixelType.UnsignedByte),
            Format.R16_UInt => (PixelFormat.Red, SizedInternalFormat.R16ui, PixelType.UnsignedInt),
            Format.R16_SNorm => (PixelFormat.Red, SizedInternalFormat.R16SNorm, PixelType.Byte),
            Format.R16_SInt => (PixelFormat.Red, SizedInternalFormat.R16i, PixelType.Int),
            Format.R16G16_Float => (PixelFormat.RG, SizedInternalFormat.RG16f, PixelType.Float),
            Format.R16G16_UNorm => (PixelFormat.RG, SizedInternalFormat.RG16, PixelType.UnsignedByte),
            Format.R16G16_UInt => (PixelFormat.RGInteger, SizedInternalFormat.RG16ui, PixelType.UnsignedInt),
            Format.R16G16_SNorm => (PixelFormat.RG, SizedInternalFormat.RG16SNorm, PixelType.Byte),
            Format.R16G16_SInt => (PixelFormat.RG, SizedInternalFormat.RG16i, PixelType.Int),
            Format.R16G16B16A16_Float => (PixelFormat.Rgba, SizedInternalFormat.Rgba16f, PixelType.Float),
            Format.R16G16B16A16_UNorm => (PixelFormat.Rgba, SizedInternalFormat.Rgba16, PixelType.UnsignedByte),
            Format.R16G16B16A16_UInt => (PixelFormat.RgbaInteger, SizedInternalFormat.Rgba16ui, PixelType.UnsignedInt),
            Format.R16G16B16A16_SNorm => (PixelFormat.Rgba, SizedInternalFormat.Rgba16SNorm, PixelType.Byte),
            Format.R16G16B16A16_SInt => (PixelFormat.Rgba, SizedInternalFormat.Rgba16i, PixelType.Int),
            Format.R32_Float => (PixelFormat.Red, SizedInternalFormat.R32f, PixelType.Float),
            Format.R32_UInt => (PixelFormat.RedInteger, SizedInternalFormat.R32ui, PixelType.UnsignedInt),
            Format.R32_SInt => (PixelFormat.RedInteger, SizedInternalFormat.R32i, PixelType.Int),
            Format.R32G32_Float => (PixelFormat.RG, SizedInternalFormat.RG32f, PixelType.Float),
            Format.R32G32_UInt => (PixelFormat.RGInteger, SizedInternalFormat.RG32ui, PixelType.UnsignedInt),
            Format.R32G32_SInt => (PixelFormat.RGInteger, SizedInternalFormat.RG32i, PixelType.Int),
            Format.R32G32B32_Float => (PixelFormat.Rgb, SizedInternalFormat.Rgb32f, PixelType.Float),
            Format.R32G32B32_UInt => (PixelFormat.RgbInteger, SizedInternalFormat.Rgb32ui, PixelType.UnsignedInt),
            Format.R32G32B32_SInt => (PixelFormat.RgbInteger, SizedInternalFormat.Rgb32i, PixelType.Int),
            Format.R32G32B32A32_Float => (PixelFormat.Rgba, SizedInternalFormat.Rgba32f, PixelType.Float),
            Format.R32G32B32A32_UInt => (PixelFormat.RgbaInteger, SizedInternalFormat.Rgba32ui, PixelType.UnsignedInt),
            Format.R32G32B32A32_SInt => (PixelFormat.RgbaInteger, SizedInternalFormat.Rgba32i, PixelType.Int),
            Format.D16_UNorm => (PixelFormat.DepthComponent, SizedInternalFormat.DepthComponent16, PixelType.UnsignedInt),
            Format.D24_UNorm_S8_UInt => (PixelFormat.DepthStencil, SizedInternalFormat.Depth24Stencil8, PixelType.UnsignedByte),
            Format.D32_Float => (PixelFormat.DepthComponent, SizedInternalFormat.DepthComponent32f, PixelType.Float),
            Format.BC1_UNorm => throw new NotImplementedException(),
            Format.BC1_UNorm_SRGB => throw new NotImplementedException(),
            Format.BC2_UNorm => throw new NotImplementedException(),
            Format.BC2_UNorm_SRGB => throw new NotImplementedException(),
            Format.BC3_UNorm => throw new NotImplementedException(),
            Format.BC3_UNorm_SRGB => throw new NotImplementedException(),
            Format.BC4_UNorm => throw new NotImplementedException(),
            Format.BC4_SNorm => throw new NotImplementedException(),
            Format.BC5_UNorm => throw new NotImplementedException(),
            Format.BC5_SNorm => throw new NotImplementedException(),
            Format.BC6H_UF16 => throw new NotImplementedException(),
            Format.BC6H_SF16 => throw new NotImplementedException(),
            Format.BC7_UNorm => throw new NotImplementedException(),
            Format.BC7_UNorm_SRGB => throw new NotImplementedException(),
            _ => throw new ArgumentOutOfRangeException(nameof(format), format, null)
        };
    }
}