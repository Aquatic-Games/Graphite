#include "D3D11Utils.h"

namespace grabs::D3D11::Utils
{
    DXGI_FORMAT FormatToD3D(const Format format)
    {
        switch (format)
        {
            case Format::B5G6R5_UNorm:
                return DXGI_FORMAT_B5G6R5_UNORM;
            case Format::B5G5R5A1_UNorm:
                return DXGI_FORMAT_B5G5R5A1_UNORM;
            case Format::R8_UNorm:
                return DXGI_FORMAT_R8_UNORM;
            case Format::R8_UInt:
                return DXGI_FORMAT_R8_UINT;
            case Format::R8_SNorm:
                return DXGI_FORMAT_R8_SNORM;
            case Format::R8_SInt:
                return DXGI_FORMAT_R8_SINT;
            case Format::A8_UNorm:
                return DXGI_FORMAT_A8_UNORM;
            case Format::R8G8_UNorm:
                return DXGI_FORMAT_R8G8_UNORM;
            case Format::R8G8_UInt:
                return DXGI_FORMAT_R8G8_UINT;
            case Format::R8G8_SNorm:
                return DXGI_FORMAT_R8G8_SNORM;
            case Format::R8G8_SInt:
                return DXGI_FORMAT_R8G8_SINT;
            case Format::R8G8B8A8_UNorm:
                return DXGI_FORMAT_R8G8B8A8_UNORM;
            case Format::R8G8B8A8_UNorm_SRGB:
                return DXGI_FORMAT_R8G8B8A8_UNORM_SRGB;
            case Format::R8G8B8A8_UInt:
                return DXGI_FORMAT_R8G8B8A8_UINT;
            case Format::R8G8B8A8_SNorm:
                return DXGI_FORMAT_R8G8B8A8_SNORM;
            case Format::R8G8B8A8_SInt:
                return DXGI_FORMAT_R8G8B8A8_SINT;
            case Format::B8G8R8A8_UNorm:
                return DXGI_FORMAT_B8G8R8A8_UNORM;
            case Format::B8G8R8A8_UNorm_SRGB:
                return DXGI_FORMAT_B8G8R8A8_UNORM_SRGB;
            case Format::R16_Float:
                return DXGI_FORMAT_R16_FLOAT;
            case Format::D16_UNorm:
                return DXGI_FORMAT_D16_UNORM;
            case Format::R16_UNorm:
                return DXGI_FORMAT_R16_UNORM;
            case Format::R16_UInt:
                return DXGI_FORMAT_R16_UINT;
            case Format::R16_SNorm:
                return DXGI_FORMAT_R16_SNORM;
            case Format::R16_SInt:
                return DXGI_FORMAT_R16_SINT;
            case Format::R16G16_Float:
                return DXGI_FORMAT_R16G16_FLOAT;
            case Format::R16G16_UNorm:
                return DXGI_FORMAT_R16G16_UNORM;
            case Format::R16G16_UInt:
                return DXGI_FORMAT_R16G16_UINT;
            case Format::R16G16_SNorm:
                return DXGI_FORMAT_R16G16_SNORM;
            case Format::R16G16_SInt:
                return DXGI_FORMAT_R16G16_SINT;
            case Format::R16G16B16A16_Float:
                return DXGI_FORMAT_R16G16B16A16_FLOAT;
            case Format::R16G16B16A16_UNorm:
                return DXGI_FORMAT_R16G16B16A16_UNORM;
            case Format::R16G16B16A16_UInt:
                return DXGI_FORMAT_R16G16B16A16_UINT;
            case Format::R16G16B16A16_SNorm:
                return DXGI_FORMAT_R16G16B16A16_SNORM;
            case Format::R16G16B16A16_SInt:
                return DXGI_FORMAT_R16G16B16A16_SINT;
            case Format::R32_Float:
                return DXGI_FORMAT_R32_FLOAT;
            case Format::R32_UInt:
                return DXGI_FORMAT_R32_UINT;
            case Format::R32_SInt:
                return DXGI_FORMAT_R32_SINT;
            case Format::R32G32_Float:
                return DXGI_FORMAT_R32G32_FLOAT;
            case Format::R32G32_UInt:
                return DXGI_FORMAT_R32G32_UINT;
            case Format::R32G32_SInt:
                return DXGI_FORMAT_R32G32_SINT;
            case Format::R32G32B32_Float:
                return DXGI_FORMAT_R32G32B32_FLOAT;
            case Format::R32G32B32_UInt:
                return DXGI_FORMAT_R32G32B32_UINT;
            case Format::R32G32B32_SInt:
                return DXGI_FORMAT_R32G32B32_SINT;
            case Format::R32G32B32A32_Float:
                return DXGI_FORMAT_R32G32B32A32_FLOAT;
            case Format::R32G32B32A32_UInt:
                return DXGI_FORMAT_R32G32B32A32_UINT;
            case Format::R32G32B32A32_SInt:
                return DXGI_FORMAT_R32G32B32A32_SINT;
            case Format::D24_UNorm_S8_UInt:
                return DXGI_FORMAT_D24_UNORM_S8_UINT;
            case Format::D32_Float:
                return DXGI_FORMAT_D32_FLOAT;
            case Format::BC1_UNorm:
                return DXGI_FORMAT_BC1_UNORM;
            case Format::BC1_UNorm_SRGB:
                return DXGI_FORMAT_BC1_UNORM_SRGB;
            case Format::BC2_UNorm:
                return DXGI_FORMAT_BC2_UNORM;
            case Format::BC2_UNorm_SRGB:
                return DXGI_FORMAT_BC2_UNORM_SRGB;
            case Format::BC3_UNorm:
                return DXGI_FORMAT_BC3_UNORM;
            case Format::BC3_UNorm_SRGB:
                return DXGI_FORMAT_BC3_UNORM_SRGB;
            case Format::BC4_UNorm:
                return DXGI_FORMAT_BC4_UNORM;
            case Format::BC4_SNorm:
                return DXGI_FORMAT_BC4_SNORM;
            case Format::BC5_UNorm:
                return DXGI_FORMAT_BC5_UNORM;
            case Format::BC5_SNorm:
                return DXGI_FORMAT_BC5_SNORM;
            case Format::BC6H_UF16:
                return DXGI_FORMAT_BC6H_UF16;
            case Format::BC6H_SF16:
                return DXGI_FORMAT_BC6H_SF16;
            case Format::BC7_UNorm:
                return DXGI_FORMAT_BC7_UNORM;
            case Format::BC7_UNorm_SRGB:
                return DXGI_FORMAT_BC7_UNORM_SRGB;
        }

        return DXGI_FORMAT_UNKNOWN;
    }
}
